// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Patients {
  id          Int           @id @default(autoincrement())
  blade       String
  age         Int
  genre       String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  erythrocyte Erythrocyte[]
  leukocyte   Leukocyte[]
  platelets   Platelets[]
  Urine       Urine[]

  @@map("patients")
}

model Erythrocyte {
  id          Int      @id @default(autoincrement())
  erythrocyte Float?
  hemoglobin  Float?
  hematocrit  Float?
  RDW         Float?
  patientId   Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  patient     Patients @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@map("erythrocytes")
}

model Leukocyte {
  id              Int      @id @default(autoincrement())
  leukocyte       Float?
  neutrophils     Float?
  bandNeutrophils Float?
  lymphocytes     Float?
  monocytes       Float?
  eosinophils     Float?
  basophils       Float?
  patientId       Int
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  patient         Patients @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@map("leukocytes")
}

model Platelets {
  id         Int      @id @default(autoincrement())
  platelets  Float?
  patientId  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  patient    Patients @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@map("platelets")
}

model Urine {
  id               Int      @id @default(autoincrement())
  volume           Float?
  color            String?
  ph               Float?
  density          Float?
  protein          String?
  glucose          String?
  ketones          String?
  nitrites         Boolean?
  hemoglobin       String?
  urobilinogen     String?
  sed_leukocytes   String?
  sed_erythrocytes String?
  sed_epithelial   String?
  sed_mucus        String?
  sed_cylinders    String?
  sed_crystals     String?
  sed_bacteria     String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  patientId Int

  patient Patients @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@map("urine_tests")
}
